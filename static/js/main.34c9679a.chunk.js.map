{"version":3,"sources":["Form.js","App.js","index.js"],"names":["MyTextInput","_ref","label","props","field","meta","useField","_jsxs","_Fragment","children","_jsx","htmlFor","name","touched","error","className","MyCheckbox","_ref2","type","CustomForm","Formik","initialValues","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","Form","id","autoComplete","Field","ErrorMessage","component","as","value","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"2LAGA,MAAMA,EAAcC,IAA0B,IAAzB,MAAEC,KAAUC,GAAOF,EACpC,MAAOG,EAAOC,GAAQC,YAASH,GAC/B,OACEI,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,SAAOC,QAASR,EAAMS,KAAKH,SAAEP,IAC7BQ,cAAA,YAAWN,KAAWD,IACrBE,EAAKQ,SAAWR,EAAKS,MACpBJ,cAAA,OAAKK,UAAU,QAAON,SAAEJ,EAAKS,QAC3B,OACH,EAIHE,EAAaC,IAA6B,IAA5B,SAAER,KAAaN,GAAOc,EACtC,MAAOb,EAAOC,GAAQC,YAAS,IAAKH,EAAOe,KAAM,aACjD,OACEX,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,SAAOQ,UAAU,WAAUN,SAAA,CACvBC,cAAA,SAAOQ,KAAK,cAAed,KAAWD,IACrCM,KAEJJ,EAAKQ,SAAWR,EAAKS,MACpBJ,cAAA,OAAKK,UAAU,QAAON,SAAEJ,EAAKS,QAC3B,OACH,EAuFMK,MAnFIA,IAGXT,cAACU,IAAM,CACPC,cAAiB,CACbT,KAAM,GACNU,MAAO,GACPC,OAAQ,EACRC,SAAU,GACVC,KAAM,GACNC,OAAO,GAEXC,iBAAoBC,IAAW,CAC3BhB,KAAMgB,MACGC,IAAI,EAAG,iCACPC,SAAS,mBAClBR,MAAOM,MACEN,MAAM,yBACNQ,SAAS,mBAClBP,OAAQK,MACCE,SAAS,sBACTD,IAAI,EAAG,cAChBL,SAAUI,MAAaE,SAAS,qBAChCL,KAAMG,MACGC,IAAI,GAAI,mCACjBH,MAAOE,MACEE,SAAS,uBACTC,MAAM,EAAC,GAAO,yBAE3BC,SAAYC,GAAUC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAQ,KAAM,IAAIxB,SAE/DF,eAAC+B,IAAI,CAACvB,UAAU,OAAMN,SAAA,CAClBC,cAAA,MAAAD,SAAI,oBACJC,cAACV,EAAW,CACRE,MAAM,YACNqC,GAAG,OACH3B,KAAK,OACLM,KAAK,OACLsB,aAAa,QAEjB9B,cAACV,EAAW,CACRE,MAAM,aACNqC,GAAG,QACH3B,KAAK,QACLM,KAAK,QACLsB,aAAa,QAEjB9B,cAAA,SAAOC,QAAQ,SAAQF,SAAC,WACxBC,cAAC+B,IAAK,CACFF,GAAG,SACH3B,KAAK,SACLM,KAAK,SACLsB,aAAa,QAEjB9B,cAACgC,IAAY,CAACC,UAAU,MAAM5B,UAAU,QAAQH,KAAK,WACrDF,cAAA,SAAOC,QAAQ,WAAUF,SAAC,aAC1BF,eAACkC,IAAK,CACFF,GAAG,WACH3B,KAAK,WACLgC,GAAG,SAAQnC,SAAA,CAEPC,cAAA,UAAQmC,MAAM,GAAEpC,SAAC,sBACjBC,cAAA,UAAQmC,MAAM,MAAKpC,SAAC,QACpBC,cAAA,UAAQmC,MAAM,MAAKpC,SAAC,QACpBC,cAAA,UAAQmC,MAAM,MAAKpC,SAAC,WAE5BC,cAACgC,IAAY,CAACC,UAAU,MAAM5B,UAAU,QAAQH,KAAK,aACrDF,cAAA,SAAOC,QAAQ,OAAMF,SAAC,iBACtBC,cAAC+B,IAAK,CACFF,GAAG,OACH3B,KAAK,OACLgC,GAAG,aAEPlC,cAACgC,IAAY,CAACC,UAAU,MAAM5B,UAAU,QAAQH,KAAK,SACrDF,cAACM,EAAU,CAACJ,KAAK,QAAOH,SAAC,0CAGzBC,cAAA,UAAQQ,KAAK,SAAQT,SAAC,gBCjGvBqC,MARf,WACE,OACEpC,cAAA,OAAKK,UAAU,MAAKN,SAChBC,cAAC4B,EAAI,KAGb,ECLAS,IAASC,OACPtC,cAACuC,IAAMC,WAAU,CAAAzC,SACfC,cAACoC,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.34c9679a.chunk.js","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <label htmlFor={props.name}>{label}</label>\n        <input {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\n    return (\n      <>\n        <label className=\"checkbox\">\n            <input type=\"checkbox\" {...field} {...props} />\n            {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n\nconst CustomForm = () => {\n\n    return (\n        <Formik\n        initialValues = {{\n            name: '',\n            email: '',\n            amount: 0,\n            currency: '',\n            text: '',\n            terms: false\n        }}\n        validationSchema = {Yup.object({\n            name: Yup.string()\n                    .min(2, 'Minimum 2 characters required')\n                    .required('Required field!'),\n            email: Yup.string()\n                    .email('Invalid email address')\n                    .required('Required field!'),\n            amount: Yup.number()\n                    .required('Amount is required')\n                    .min(5, 'At least 5'),\n            currency: Yup.string().required('Select a currency'),\n            text: Yup.string()\n                    .min(10, 'At least 10 characters required'),\n            terms: Yup.boolean()\n                    .required('Consent is required')\n                    .oneOf([true], \"Consent is required\")\n        })}\n        onSubmit = {values => console.log(JSON.stringify(values, null, 2))}\n        >\n            <Form className=\"form\">\n                <h2>Make a Donation</h2>\n                <MyTextInput\n                    label=\"Your Name\"\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                />\n                <MyTextInput\n                    label=\"Your Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"off\"\n                />\n                <label htmlFor=\"amount\">Amount</label>\n                <Field\n                    id=\"amount\"\n                    name=\"amount\"\n                    type=\"number\"\n                    autoComplete=\"off\"\n                />\n                <ErrorMessage component=\"div\" className=\"error\" name=\"amount\"/>\n                <label htmlFor=\"currency\">Currency</label>\n                <Field\n                    id=\"currency\"\n                    name=\"currency\"\n                    as=\"select\"\n                    >\n                        <option value=\"\">Select a currency</option>\n                        <option value=\"USD\">USD</option>\n                        <option value=\"EUR\">EUR</option>\n                        <option value=\"CNY\">CNY</option>\n                </Field>\n                <ErrorMessage component=\"div\" className=\"error\" name=\"currency\"/>\n                <label htmlFor=\"text\">Your Message</label>\n                <Field \n                    id=\"text\"\n                    name=\"text\"\n                    as=\"textarea\"\n                />\n                <ErrorMessage component=\"div\" className=\"error\" name=\"text\"/>\n                <MyCheckbox name=\"terms\">\n                    Do you agree with the privacy policy?\n                </MyCheckbox>\n                <button type=\"submit\">Submit</button>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default CustomForm;\n","import './app.scss';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}